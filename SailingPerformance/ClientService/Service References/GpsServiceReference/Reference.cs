//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientService.GpsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGpsByDateRequest", Namespace="http://schemas.datacontract.org/2004/07/WcfService.Services.GpsService.Requests")]
    [System.SerializableAttribute()]
    public partial class GetGpsByDateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseResponse", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClientService.GpsServiceReference.GetAllGpsByDateResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ClientService.GpsServiceReference.GetGpsByDateResponse))]
    public partial class BaseResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllGpsByDateResponse", Namespace="http://schemas.datacontract.org/2004/07/WcfService.Services.GpsService.Responses")]
    [System.SerializableAttribute()]
    public partial class GetAllGpsByDateResponse : ClientService.GpsServiceReference.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] DirectionWindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] StrengthWindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime[] TimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] DirectionWind {
            get {
                return this.DirectionWindField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionWindField, value) != true)) {
                    this.DirectionWindField = value;
                    this.RaisePropertyChanged("DirectionWind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] StrengthWind {
            get {
                return this.StrengthWindField;
            }
            set {
                if ((object.ReferenceEquals(this.StrengthWindField, value) != true)) {
                    this.StrengthWindField = value;
                    this.RaisePropertyChanged("StrengthWind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime[] Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGpsByDateResponse", Namespace="http://schemas.datacontract.org/2004/07/WcfService.Services.GpsService.Responses")]
    [System.SerializableAttribute()]
    public partial class GetGpsByDateResponse : ClientService.GpsServiceReference.BaseResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] DirectionWindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] StrengthWindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime[] TimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] DirectionWind {
            get {
                return this.DirectionWindField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionWindField, value) != true)) {
                    this.DirectionWindField = value;
                    this.RaisePropertyChanged("DirectionWind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] StrengthWind {
            get {
                return this.StrengthWindField;
            }
            set {
                if ((object.ReferenceEquals(this.StrengthWindField, value) != true)) {
                    this.StrengthWindField = value;
                    this.RaisePropertyChanged("StrengthWind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime[] Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllGpsByDateRequest", Namespace="http://schemas.datacontract.org/2004/07/WcfService.Services.GpsService.Requests")]
    [System.SerializableAttribute()]
    public partial class GetAllGpsByDateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GpsServiceReference.IGpsService")]
    public interface IGpsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGpsService/GetGpsDataByDate", ReplyAction="http://tempuri.org/IGpsService/GetGpsDataByDateResponse")]
        ClientService.GpsServiceReference.GetGpsByDateResponse GetGpsDataByDate(ClientService.GpsServiceReference.GetGpsByDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGpsService/GetGpsDataByDate", ReplyAction="http://tempuri.org/IGpsService/GetGpsDataByDateResponse")]
        System.Threading.Tasks.Task<ClientService.GpsServiceReference.GetGpsByDateResponse> GetGpsDataByDateAsync(ClientService.GpsServiceReference.GetGpsByDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGpsService/GetAllGpsDataByDate", ReplyAction="http://tempuri.org/IGpsService/GetAllGpsDataByDateResponse")]
        ClientService.GpsServiceReference.GetAllGpsByDateResponse GetAllGpsDataByDate(ClientService.GpsServiceReference.GetAllGpsByDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGpsService/GetAllGpsDataByDate", ReplyAction="http://tempuri.org/IGpsService/GetAllGpsDataByDateResponse")]
        System.Threading.Tasks.Task<ClientService.GpsServiceReference.GetAllGpsByDateResponse> GetAllGpsDataByDateAsync(ClientService.GpsServiceReference.GetAllGpsByDateRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGpsServiceChannel : ClientService.GpsServiceReference.IGpsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GpsServiceClient : System.ServiceModel.ClientBase<ClientService.GpsServiceReference.IGpsService>, ClientService.GpsServiceReference.IGpsService {
        
        public GpsServiceClient() {
        }
        
        public GpsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GpsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GpsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GpsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClientService.GpsServiceReference.GetGpsByDateResponse GetGpsDataByDate(ClientService.GpsServiceReference.GetGpsByDateRequest request) {
            return base.Channel.GetGpsDataByDate(request);
        }
        
        public System.Threading.Tasks.Task<ClientService.GpsServiceReference.GetGpsByDateResponse> GetGpsDataByDateAsync(ClientService.GpsServiceReference.GetGpsByDateRequest request) {
            return base.Channel.GetGpsDataByDateAsync(request);
        }
        
        public ClientService.GpsServiceReference.GetAllGpsByDateResponse GetAllGpsDataByDate(ClientService.GpsServiceReference.GetAllGpsByDateRequest request) {
            return base.Channel.GetAllGpsDataByDate(request);
        }
        
        public System.Threading.Tasks.Task<ClientService.GpsServiceReference.GetAllGpsByDateResponse> GetAllGpsDataByDateAsync(ClientService.GpsServiceReference.GetAllGpsByDateRequest request) {
            return base.Channel.GetAllGpsDataByDateAsync(request);
        }
    }
}
